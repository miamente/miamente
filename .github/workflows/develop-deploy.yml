name: Deploy to Staging (Develop Branch)

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

env:
  NODE_VERSION: "22"
  FIREBASE_PROJECT_ID: miamente-staging

jobs:
  setup:
    name: Setup and Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npm run format:check

  typecheck:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check web app
        run: cd apps/web && npm run typecheck

      - name: Type check functions
        run: cd functions && npm run typecheck

  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: [setup, lint, typecheck]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build web application
        run: cd apps/web && npm run build
        env:
          NEXT_PUBLIC_FB_API_KEY: ${{ secrets.NEXT_PUBLIC_FB_API_KEY }}
          NEXT_PUBLIC_FB_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FB_AUTH_DOMAIN }}
          NEXT_PUBLIC_FB_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FB_PROJECT_ID }}
          NEXT_PUBLIC_FB_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FB_STORAGE_BUCKET }}
          NEXT_PUBLIC_FB_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FB_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FB_APP_ID: ${{ secrets.NEXT_PUBLIC_FB_APP_ID }}
          NEXT_PUBLIC_FB_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FB_MEASUREMENT_ID }}
          NEXT_PUBLIC_RECAPTCHA_ENTERPRISE_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_ENTERPRISE_SITE_KEY }}

      - name: Build Firebase Functions
        run: cd functions && npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-staging
          path: |
            apps/web/.next
            functions/lib
          retention-days: 1

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:ci
        env:
          NODE_ENV: test

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build, unit-tests]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-staging
          path: .

      - name: Authenticate to Firebase
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_STAGING }}

      - name: Deploy to Firebase Hosting (Staging)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_STAGING }}
          channelId: staging
          projectId: ${{ env.FIREBASE_PROJECT_ID }}

      - name: Deploy Firebase Functions (Staging)
        run: |
          cd functions
          firebase deploy --only functions --project=${{ env.FIREBASE_PROJECT_ID }} --token=${{ secrets.FIREBASE_TOKEN }}

      - name: Notify Staging Deployment
        run: |
          echo "ðŸš€ Staging deployment completed successfully!"
          echo "ðŸ“± URL: https://miamente-staging.web.app"
          echo "ðŸ”— Commit: ${{ github.sha }}"
          echo "ðŸ‘¤ Author: ${{ github.actor }}"
