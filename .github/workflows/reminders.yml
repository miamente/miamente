name: Send Appointment Reminders

on:
  schedule:
    # Run every 5 minutes
    - cron: '*/5 * * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run reminders for'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  send-reminders:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          if [ "${{ github.event.inputs.environment }}" = "production" ]; then
            echo "REMINDERS_URL=https://us-central1-miamente-prod.cloudfunctions.net/runReminders" >> $GITHUB_ENV
            echo "REMINDERS_TOKEN=${{ secrets.REMINDERS_AUTH_TOKEN_PROD }}" >> $GITHUB_ENV
          else
            echo "REMINDERS_URL=https://us-central1-miamente-staging.cloudfunctions.net/runReminders" >> $GITHUB_ENV
            echo "REMINDERS_TOKEN=${{ secrets.REMINDERS_AUTH_TOKEN_STAGING }}" >> $GITHUB_ENV
          fi

      - name: Send reminders
        run: |
          echo "Sending reminders to: $REMINDERS_URL"
          
          response=$(curl -s -w "\n%{http_code}" \
            -X GET \
            -H "Authorization: Bearer $REMINDERS_TOKEN" \
            -H "Content-Type: application/json" \
            "$REMINDERS_URL")
          
          # Extract response body and status code
          http_code=$(echo "$response" | tail -n1)
          response_body=$(echo "$response" | head -n -1)
          
          echo "HTTP Status: $http_code"
          echo "Response: $response_body"
          
          # Check if the request was successful
          if [ "$http_code" -eq 200 ]; then
            echo "✅ Reminders sent successfully"
            
            # Parse JSON response to get reminder counts
            reminders_24h=$(echo "$response_body" | jq -r '.remindersSent."24h" // 0')
            reminders_1h=$(echo "$response_body" | jq -r '.remindersSent."1h" // 0')
            total_reminders=$(echo "$response_body" | jq -r '.totalRemindersSent // 0')
            errors=$(echo "$response_body" | jq -r '.errors | length // 0')
            
            echo "📧 24h reminders sent: $reminders_24h"
            echo "📧 1h reminders sent: $reminders_1h"
            echo "📧 Total reminders sent: $total_reminders"
            echo "❌ Errors: $errors"
            
            # Set outputs for other steps
            echo "reminders_24h=$reminders_24h" >> $GITHUB_OUTPUT
            echo "reminders_1h=$reminders_1h" >> $GITHUB_OUTPUT
            echo "total_reminders=$total_reminders" >> $GITHUB_OUTPUT
            echo "errors=$errors" >> $GITHUB_OUTPUT
            
            # Exit with success
            exit 0
          else
            echo "❌ Failed to send reminders"
            echo "Error response: $response_body"
            exit 1
          fi

      - name: Notify on failure
        if: failure()
        run: |
          echo "🚨 Reminder job failed!"
          echo "Environment: ${{ github.event.inputs.environment || 'scheduled' }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Commit: ${{ github.sha }}"
          
          # In a real implementation, you would send notifications here
          # For example, to Slack, email, or other monitoring systems
          echo "Would send failure notification to monitoring system"

      - name: Log success metrics
        if: success()
        run: |
          echo "📊 Reminder job completed successfully"
          echo "Environment: ${{ github.event.inputs.environment || 'scheduled' }}"
          echo "24h reminders: ${{ steps.send-reminders.outputs.reminders_24h }}"
          echo "1h reminders: ${{ steps.send-reminders.outputs.reminders_1h }}"
          echo "Total reminders: ${{ steps.send-reminders.outputs.total_reminders }}"
          echo "Errors: ${{ steps.send-reminders.outputs.errors }}"
          
          # In a real implementation, you would log metrics here
          # For example, to monitoring systems like DataDog, New Relic, etc.
          echo "Would log metrics to monitoring system"

      - name: Create summary
        if: always()
        run: |
          echo "## 📧 Appointment Reminders Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ github.event.inputs.environment || 'scheduled' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Time:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ **Status:** Success" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📊 Results" >> $GITHUB_STEP_SUMMARY
            echo "- **24h reminders sent:** ${{ steps.send-reminders.outputs.reminders_24h }}" >> $GITHUB_STEP_SUMMARY
            echo "- **1h reminders sent:** ${{ steps.send-reminders.outputs.reminders_1h }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Total reminders sent:** ${{ steps.send-reminders.outputs.total_reminders }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Errors:** ${{ steps.send-reminders.outputs.errors }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status:** Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🚨 Error Details" >> $GITHUB_STEP_SUMMARY
            echo "The reminder job failed. Check the logs above for details." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*This summary is automatically generated by the reminders workflow.*" >> $GITHUB_STEP_SUMMARY